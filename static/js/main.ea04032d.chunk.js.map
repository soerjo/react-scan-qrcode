{"version":3,"sources":["App.tsx","index.tsx"],"names":["useStyles","makeStyles","root","widht","height","card","margin","title","display","justifyContent","alignItems","background","padding","btn","marginTop","marginBottom","App","React","useState","src","setsrc","qrImage","setqrImage","scanWeb","setScanWeb","toggle","setToggle","classes","Container","className","Card","CardContent","Grid","container","spacing","item","xl","lg","md","sm","xs","TextField","label","value","onChange","e","target","Button","variant","onClick","QRcode","toDataURL","then","val","alt","state","delay","style","width","onError","console","log","onScan","res","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wRAaMA,EAAYC,YAAW,CAC3BC,KAAM,CACJC,MAAO,OACPC,OAAQ,SAEVC,KAAM,CACJC,OAAQ,QAEVC,MAAO,CACLC,QAAS,OACTC,eAAgB,SAChBC,WAAY,SACZC,WAAY,OACZC,QAAS,IAEXC,IAAK,CACHC,UAAW,GACXC,aAAc,MA4EHC,EAxEO,WACpB,MAAsBC,IAAMC,SAAS,IAArC,mBAAOC,EAAP,KAAYC,EAAZ,KACA,EAA8BH,IAAMC,SAAS,IAA7C,mBAAOG,EAAP,KAAgBC,EAAhB,KACA,EAA8BL,IAAMC,SAAS,IAA7C,mBAAOK,EAAP,KAAgBC,EAAhB,KACA,EAA4BP,IAAMC,UAAS,GAA3C,mBAAOO,EAAP,KAAeC,EAAf,KACMC,EAAU3B,IAkBhB,OACE,cAAC4B,EAAA,EAAD,CAAWC,UAAWF,EAAQzB,KAA9B,SACE,eAAC4B,EAAA,EAAD,CAAMD,UAAWF,EAAQtB,KAAzB,UACE,oBAAIwB,UAAWF,EAAQpB,MAAvB,8BAEA,cAACwB,EAAA,EAAD,UACE,eAACC,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,EAAzB,UACE,eAACF,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAIC,GAAI,GAA5C,UACE,cAACC,EAAA,EAAD,CACEC,MAAM,kBACNC,MAAOxB,EACPyB,SAvBO,SAACC,GACpBzB,EAAOyB,EAAEC,OAAOH,UAwBN,uBACA,cAACI,EAAA,EAAD,CACElB,UAAWF,EAAQd,IACnBmC,QAAQ,YACRC,QAjCS,WACrBC,IAAOC,UAAUhC,GAAKiC,MAAK,SAACC,GAAD,OAAS/B,EAAW+B,OA6BrC,sBAOA,uBACChC,GAAW,qBAAKF,IAAKE,EAASiC,IAAI,cAErC,eAACtB,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAIC,GAAI,GAA5C,UACE,cAACO,EAAA,EAAD,CACElB,UAAWF,EAAQd,IACnBmC,QAAQ,YACRC,QAAS,kBAAMvB,GAAU,SAAC6B,GAAD,OAAYA,MAHvC,4BAOC9B,GACC,cAAC,IAAD,CACE+B,MAAO,IACPC,MAAO,CAAEC,MAAO,QAChBC,QA5CI,SAACd,GACnBe,QAAQC,IAAIhB,IA4CEiB,OAzCS,SAACC,GACxBA,GAAOvC,EAAWuC,MA2CR,0DAA6BxC,mBC3F3CyC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.ea04032d.chunk.js","sourcesContent":["import React from \"react\";\nimport QRcode from \"qrcode\";\nimport {\n  Container,\n  Card,\n  CardContent,\n  Grid,\n  TextField,\n  Button,\n} from \"@mui/material\";\nimport { makeStyles } from \"@mui/styles\";\nimport QrReader from \"react-qr-reader\";\n\nconst useStyles = makeStyles({\n  root: {\n    widht: \"100%\",\n    height: \"100vh\",\n  },\n  card: {\n    margin: \"1rem\",\n  },\n  title: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    background: \"blue\",\n    padding: 20,\n  },\n  btn: {\n    marginTop: 10,\n    marginBottom: 20,\n  },\n});\n\nconst App: React.FC = () => {\n  const [src, setsrc] = React.useState(\"\");\n  const [qrImage, setqrImage] = React.useState(\"\");\n  const [scanWeb, setScanWeb] = React.useState(\"\");\n  const [toggle, setToggle] = React.useState(false);\n  const classes = useStyles();\n\n  const generateQrCode = () => {\n    QRcode.toDataURL(src).then((val) => setqrImage(val));\n  };\n\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setsrc(e.target.value);\n  };\n\n  const handleError = (e: Error) => {\n    console.log(e);\n  };\n\n  const handleScanWebCam = (res: string | null) => {\n    res && setScanWeb(res);\n  };\n\n  return (\n    <Container className={classes.root}>\n      <Card className={classes.card}>\n        <h2 className={classes.title}>Generate Qr Code</h2>\n\n        <CardContent>\n          <Grid container spacing={2}>\n            <Grid item xl={4} lg={4} md={6} sm={12} xs={12}>\n              <TextField\n                label=\"Enter Text Here\"\n                value={src}\n                onChange={handleChange}\n              />\n              <br />\n              <Button\n                className={classes.btn}\n                variant=\"contained\"\n                onClick={generateQrCode}\n              >\n                Generate\n              </Button>\n              <br />\n              {qrImage && <img src={qrImage} alt=\"qrCode\" />}\n            </Grid>\n            <Grid item xl={4} lg={4} md={6} sm={12} xs={12}>\n              <Button\n                className={classes.btn}\n                variant=\"contained\"\n                onClick={() => setToggle((state) => !state)}\n              >\n                Scan by webcam\n              </Button>\n              {toggle && (\n                <QrReader\n                  delay={300}\n                  style={{ width: \"100%\" }}\n                  onError={handleError}\n                  onScan={handleScanWebCam}\n                />\n              )}\n              <h3>Scanned by webcam Code: {scanWeb}</h3>\n            </Grid>\n          </Grid>\n        </CardContent>\n      </Card>\n    </Container>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n// import Interfal from \"./Interfal\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}